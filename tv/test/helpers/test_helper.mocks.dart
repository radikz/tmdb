// Mocks generated by Mockito 5.4.0 from annotations
// in tv/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:convert' as _i21;
import 'dart:typed_data' as _i22;

import 'package:core/tv/data/models/tv_model.dart' as _i19;
import 'package:core/tv/domain/entities/tv.dart' as _i14;
import 'package:core/utils/failure.dart' as _i13;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i7;
import 'package:http/io_client.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite_sqlcipher/sqflite.dart' as _i10;
import 'package:tv/data/datasources/db/database_helper_tv.dart' as _i8;
import 'package:tv/data/datasources/tv_local_data_source.dart' as _i20;
import 'package:tv/data/datasources/tv_remote_data_source.dart' as _i18;
import 'package:tv/data/models/detail_season_model.dart' as _i4;
import 'package:tv/data/models/tv_detail_model.dart' as _i3;
import 'package:tv/data/models/tv_episode_model.dart' as _i5;
import 'package:tv/data/models/tv_table.dart' as _i11;
import 'package:tv/domain/entities/detail_season.dart' as _i16;
import 'package:tv/domain/entities/tv_detail.dart' as _i15;
import 'package:tv/domain/entities/tv_episode.dart' as _i17;
import 'package:tv/domain/repositories/tv_repository.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetailModel_1 extends _i1.SmartFake implements _i3.TvDetailModel {
  _FakeTvDetailModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailSeasonModel_2 extends _i1.SmartFake
    implements _i4.DetailSeasonModel {
  _FakeDetailSeasonModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvEpisodeModel_3 extends _i1.SmartFake
    implements _i5.TvEpisodeModel {
  _FakeTvEpisodeModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOStreamedResponse_4 extends _i1.SmartFake
    implements _i6.IOStreamedResponse {
  _FakeIOStreamedResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_5 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelperTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelperTv extends _i1.Mock implements _i8.DatabaseHelperTv {
  MockDatabaseHelperTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i10.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i9.Future<_i10.Database?>.value(),
      ) as _i9.Future<_i10.Database?>);
  @override
  _i9.Future<int> insertWatchlist(_i11.TvTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [tv],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);
  @override
  _i9.Future<int> removeWatchlist(_i11.TvTable? tv) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tv],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);
  @override
  _i9.Future<Map<String, dynamic>?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i9.Future<Map<String, dynamic>?>.value(),
      ) as _i9.Future<Map<String, dynamic>?>);
  @override
  _i9.Future<List<Map<String, dynamic>>> getWatchlistTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvs,
          [],
        ),
        returnValue: _i9.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i9.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i12.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>> getPopularTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTvs,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>.value(
            _FakeEither_0<_i13.Failure, List<_i14.Tv>>(
          this,
          Invocation.method(
            #getPopularTvs,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>> getNowAiringTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowAiringTvs,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>.value(
            _FakeEither_0<_i13.Failure, List<_i14.Tv>>(
          this,
          Invocation.method(
            #getNowAiringTvs,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>> getTopRatedTvs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvs,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>.value(
            _FakeEither_0<_i13.Failure, List<_i14.Tv>>(
          this,
          Invocation.method(
            #getTopRatedTvs,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, _i15.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, _i15.TvDetail>>.value(
            _FakeEither_0<_i13.Failure, _i15.TvDetail>(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, _i15.TvDetail>>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>> getTvsRecommendation(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvsRecommendation,
          [id],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>.value(
            _FakeEither_0<_i13.Failure, List<_i14.Tv>>(
          this,
          Invocation.method(
            #getTvsRecommendation,
            [id],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, _i16.DetailSeason>> getTvDetailSeason(
    int? tvId,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetailSeason,
          [
            tvId,
            seasonNumber,
          ],
        ),
        returnValue:
            _i9.Future<_i2.Either<_i13.Failure, _i16.DetailSeason>>.value(
                _FakeEither_0<_i13.Failure, _i16.DetailSeason>(
          this,
          Invocation.method(
            #getTvDetailSeason,
            [
              tvId,
              seasonNumber,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, _i16.DetailSeason>>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, _i17.TvEpisode>> getTvDetailEpisode(
    int? tvId,
    int? seasonNumber,
    int? episodeNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetailEpisode,
          [
            tvId,
            seasonNumber,
            episodeNumber,
          ],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, _i17.TvEpisode>>.value(
            _FakeEither_0<_i13.Failure, _i17.TvEpisode>(
          this,
          Invocation.method(
            #getTvDetailEpisode,
            [
              tvId,
              seasonNumber,
              episodeNumber,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, _i17.TvEpisode>>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, String>> saveWatchlist(
          _i15.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [tv],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, String>>.value(
            _FakeEither_0<_i13.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [tv],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, String>>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, String>> removeWatchlist(
          _i15.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tv],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, String>>.value(
            _FakeEither_0<_i13.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [tv],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, String>>);
  @override
  _i9.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>> getTvsWatchlist() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvsWatchlist,
          [],
        ),
        returnValue: _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>.value(
            _FakeEither_0<_i13.Failure, List<_i14.Tv>>(
          this,
          Invocation.method(
            #getTvsWatchlist,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Either<_i13.Failure, List<_i14.Tv>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i18.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<List<_i19.TvModel>> getPopularTvs() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTvs,
          [],
        ),
        returnValue: _i9.Future<List<_i19.TvModel>>.value(<_i19.TvModel>[]),
      ) as _i9.Future<List<_i19.TvModel>>);
  @override
  _i9.Future<List<_i19.TvModel>> getNowAiringTvs() => (super.noSuchMethod(
        Invocation.method(
          #getNowAiringTvs,
          [],
        ),
        returnValue: _i9.Future<List<_i19.TvModel>>.value(<_i19.TvModel>[]),
      ) as _i9.Future<List<_i19.TvModel>>);
  @override
  _i9.Future<List<_i19.TvModel>> getTopRatedTvs() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvs,
          [],
        ),
        returnValue: _i9.Future<List<_i19.TvModel>>.value(<_i19.TvModel>[]),
      ) as _i9.Future<List<_i19.TvModel>>);
  @override
  _i9.Future<_i3.TvDetailModel> getTvDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue: _i9.Future<_i3.TvDetailModel>.value(_FakeTvDetailModel_1(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i9.Future<_i3.TvDetailModel>);
  @override
  _i9.Future<List<_i19.TvModel>> getTvsRecommendation(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvsRecommendation,
          [id],
        ),
        returnValue: _i9.Future<List<_i19.TvModel>>.value(<_i19.TvModel>[]),
      ) as _i9.Future<List<_i19.TvModel>>);
  @override
  _i9.Future<_i4.DetailSeasonModel> getTvDetailSeason(
    int? tvId,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetailSeason,
          [
            tvId,
            seasonNumber,
          ],
        ),
        returnValue:
            _i9.Future<_i4.DetailSeasonModel>.value(_FakeDetailSeasonModel_2(
          this,
          Invocation.method(
            #getTvDetailSeason,
            [
              tvId,
              seasonNumber,
            ],
          ),
        )),
      ) as _i9.Future<_i4.DetailSeasonModel>);
  @override
  _i9.Future<_i5.TvEpisodeModel> getTvDetailEpisode(
    int? tvId,
    int? seasonNumber,
    int? episodeNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetailEpisode,
          [
            tvId,
            seasonNumber,
            episodeNumber,
          ],
        ),
        returnValue: _i9.Future<_i5.TvEpisodeModel>.value(_FakeTvEpisodeModel_3(
          this,
          Invocation.method(
            #getTvDetailEpisode,
            [
              tvId,
              seasonNumber,
              episodeNumber,
            ],
          ),
        )),
      ) as _i9.Future<_i5.TvEpisodeModel>);
  @override
  _i9.Future<List<_i19.TvModel>> searchTvs(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvs,
          [query],
        ),
        returnValue: _i9.Future<List<_i19.TvModel>>.value(<_i19.TvModel>[]),
      ) as _i9.Future<List<_i19.TvModel>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i20.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<String> insertWatchlist(_i11.TvTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  _i9.Future<String> removeWatchlist(_i11.TvTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  _i9.Future<_i11.TvTable?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i9.Future<_i11.TvTable?>.value(),
      ) as _i9.Future<_i11.TvTable?>);
  @override
  _i9.Future<List<_i11.TvTable>> getWatchlistTvs() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTvs,
          [],
        ),
        returnValue: _i9.Future<List<_i11.TvTable>>.value(<_i11.TvTable>[]),
      ) as _i9.Future<List<_i11.TvTable>>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i6.IOClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i6.IOStreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i9.Future<_i6.IOStreamedResponse>.value(_FakeIOStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i9.Future<_i6.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<_i7.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i21.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i21.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i21.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<_i7.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i21.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i9.Future<_i7.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response>);
  @override
  _i9.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  _i9.Future<_i22.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i9.Future<_i22.Uint8List>.value(_i22.Uint8List(0)),
      ) as _i9.Future<_i22.Uint8List>);
}
